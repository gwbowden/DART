# Template for IBM XLF compiler on an IBM AIX platform
#
# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# <next few lines under version control, do not edit>
# $URL$
# $Id$
# $Revision$
# $Date$

# typical use with mkmf
# mkmf -t mkmf.template.xxxx -c"-Duse_netCDF" ...
#
# Our installation has the system of compiling the libraries with both 64 bit
# and 32 bit addressing, and incorporates the 'autopromotion' flags into
# the library directory node. Hence, the netCDF libraries compiled with
# 64bit addressing will be in /usr/local/lib64  and if no autopromotion
# flags are set, the libraries will be installed into u
# /usr/local/lib64/r4i4 -- TJH. 
#
# FFLAGS   used all the time
#   -qsuffix=f=f90:cpp=F90      invoke the preprocessor at right time
#   -q64                        use 64bit addressing
#   -qarch=auto                 optimize for _this_ architecture
#   -qmaxmem=-1 
#
# FFLAGS   useful for debugging
#   -C                        array bounds checking
#   -qfullpath -g             for totalview
#
#   to abort when computing with (signalling) NaNs 
#   -qsigtrap=xl__trcedump -qflttrap=ov:zero:inv:en
#
# FFLAGS   useful for benchmarking
#   -O0                       turn off optimization
#
# FFLAGS   useful for production
#   -O2                       default optimization
#
# FFLAGS   we no longer use 
#   -qdpc                     double precision constants
#   -qrealsize=8              autopromote (more than you think)
#   -qintsize=4               ditto

# customize_me

MPIFC = mpxlf95_r
MPILD = mpxlf95_r
FC = xlf90_r
LD = xlf90_r

# this is where the proper libs are on the 'bluefire' system.  adjust for
# your own locations to find the right include files and libs.
INCS = -I/usr/local/lib64/r4i4 -I/usr/local/include
LIBS = -L/usr/local/lib64/r4i4 -lnetcdf

FFLAGS = -qsuffix=f=f90:cpp=F90 -q64 -b64 -qarch=auto -qmaxmem=-1 -O $(INCS)
LDFLAGS = $(FFLAGS) $(LIBS)

# for debugging, try:
FFLAGS = -qsuffix=f=f90:cpp=F90 -q64 -b64 -qarch=auto -qmaxmem=-1 -g -qfullpath -C -qflttrap=enable:invalid,nanq,zerodivide $(INCS)

# do not use the (obsolete) loader flags -bmaxdata:2000000000 and 
# -bmaxstack:2000000000 because in the 64 bit world they restrict the
# amount of memory you can use.

