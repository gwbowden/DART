# Template for Intel ifort and Mac OSX
#
# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# <next few lines under version control, do not edit>
# $URL$
# $Id$
# $Revision$
# $Date$

# typical use with mkmf
# mkmf -t mkmf.template.xxxx -c"-Duse_netCDF" ...
#
# Most likely NETCDF and LIBS need to be customized for your site
#
# 
# Building DART with the commercial Intel compiler for the iMacs:
# 
# You will need to have a version of the (free) netCDF software
# library package:
#
#      http://www.unidata.ucar.edu/software/netcdf
# 
#
# users have had problems with the default stack size on OS X.
# the -Wl,-stack_size argument below increases the stack large
# enough to run large models.
#

# customize_me

MPIFC = mpif90
MPILD = mpif90
FC = ifort
LD = ifort

# If your NETCDF environment variable is not set correctly, 
# uncomment the following line and set value properly. 
# NETCDF = /usr/local
#
# if you get an error about missing fortran interface routines
# to the netcdf functions, try adding -lnetcdff to the LIBS line below.
# your system admin can choose to put the fortran interfaces in the
# libnetcdf library or build them into a separate libnetcdff lib.


INCS = -I${NETCDF}/include
LIBS = -L${NETCDF}/lib -lnetcdf

# for Intel 9.x:
#FFLAGS  = $(INCS) -O 
#LDFLAGS = $(INCS) -Wl,-stack_size,10000000 $(LIBS)

# for Intel 10.x+:
FFLAGS  = $(INCS) -O -heap-arrays -vec-report0 

LDFLAGS = $(INCS) $(LIBS)


# for debugging:
# -fpe0: Floating-point invalid, divide-by-zero, and overflow exceptions are enabled.
# if -check all is too much, you should get most of what you want with
# -check bounds,pointers,uninit
#FFLAGS  = $(INCS) -g -heap-arrays -vec-report0 -fpe0 -check all
