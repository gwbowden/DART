# Template for Pathscale 2.0 f90 Compiler on a Linux cluster
#  (applies to the NCAR machine 'lightning' - an Opteron cluster)
#
# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# <next few lines under version control, do not edit>
# $URL$
# $Id$
# $Revision$
# $Date$

# typical use with mkmf
# mkmf -t mkmf.template.xxxx -c"-Duse_netCDF" ...
#
# NETCDF and LIBS needs to be customized for your site
#
# FFLAGS   useful for benchmarking
#   -O0                     no optimization
#   -Wuninitialized         Warn about unitialized automatic variables
#   -ffortran-bounds-check  check bounds
#   -fno-fast-math          Conform to ANSI & IEEE math rules at expense of speed
#   -fno-fast-stdlib        Do not use faster versions of std library functions
#   -fullwarn               more warnings, especially about missing prototypes
#
# FFLAGS   useful for speed
#    -O                      'same as -O2'
#    -O3                     'full optimization'
#    -Ofast                  'default fast option configuration'
#
# The netcdf library location for a different version of the compiler:
# NETCDF = 
#
# Compiler Information (pathf90 --v):
#    PathScale EKO Compiler Suite(TM): Version 2.0
#    Built on: 2004-12-30 13:33:07 -0800
#    Thread model: posix
#    GNU gcc version 3.3.1 (PathScale 2.0 driver)

#----------------------------------------------------------------------

# customize_me

MPIFC=mpif90
MPILD=mpif90
FC = pathf90
LD = pathf90

# If your NETCDF environment variable is not set correctly, 
# uncomment the following line and set value properly. 
# NETCDF = /home/lightning/thoar/netcdf-3.6.0p1-pathcc-pathf90-2.0-64
#
# if you get an error about missing fortran interface routines
# to the netcdf functions, try adding -lnetcdff to the LIBS line below.
# your system admin can choose to put the fortran interfaces in the
# libnetcdf library or build them into a separate libnetcdff lib.


INCS = -I$(NETCDF)/include
LIBS = -L$(NETCDF)/lib -lnetcdf
FFLAGS  = -O $(INCS)
LDFLAGS = $(FFLAGS) $(LIBS)

# for development/debugging, use these flags instead:
#FFLAGS = -Wuninitialized -ffortran-bounds-check -fullwarn -g -I$(NETCDF)/include

